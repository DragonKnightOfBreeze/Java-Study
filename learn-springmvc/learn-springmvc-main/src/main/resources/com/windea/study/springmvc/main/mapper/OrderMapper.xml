<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.windea.study.springmvc.main.mapper.OrderMapper">
	<!--查询订单关联查询用户信息-->
	<select id="findOrderWithUser" resultType="com.windea.study.mybatis.day02.domain.ExtendedOrder">
		select `Order`.*, User.username, User.sex, User.address
		from `Order`, User
		where `Order`.userId = User.id;
	</select>

	<!--查询订单关联查询用户信息的resultMap-->
	<resultMap id="orderResultMap" type="com.windea.study.mybatis.day02.domain.O2O_Order">
		<!--配置映射的订单信息-->
		<!--如果有多个列组成唯一标志，就需要配置多个id-->
		<id column="id" property="id"/>
		<result column="createTime" property="createTime"/>
		<result column="note" property="note"/>
		<result column="number" property="number"/>
		<!--配置映射的关联的用户信息-->
		<association property="user" javaType="com.windea.study.mybatis.day02.domain.User">
			<!--id：关联查询的用户的唯一标志-->
			<id column="userId" property="id"/>
			<result column="username" property="username"/>
			<result column="sex" property="sex"/>
			<result column="address" property="address"/>
			<result column="birthday" property="birthday"/>
		</association>
	</resultMap>

	<!--使用resultMap-->
	<select id="findOrderWithUser2" resultMap="orderResultMap">
		select `Order`.*, User.*
		from `Order`, User
		where `Order`.userId = User.id;
	</select>

	<!--使用extends属性继承，不用再配置订单信息和用户信息的映射-->
	<resultMap id="orderInDetailResultMap" type="com.windea.study.mybatis.day02.domain.O2M_Order"
	           extends="orderResultMap">
		<!--ofType：映射到集合属性中的实体类类型-->
		<collection property="orderDetailList" ofType="com.windea.study.mybatis.day02.domain.OrderDetail">
			<id column="odId" property="id"/>
			<result column="itemId" property="itemId"/>
			<result column="itemCount" property="itemCount"/>
		</collection>
	</resultMap>

	<!--查询订单以及用户信息、订单明细信息-->
	<select id="findOrderInDetail" resultMap="orderInDetailResultMap">
		select `Order`.*,
		       User.username, User.sex, User.address, User.birthday,
		       OrderDetail.id odId, OrderDetail.itemId, OrderDetail.itemCount, OrderDetail.orderId
		from `Order`, User, OrderDetail
		where `Order`.userId = User.id
		  and OrderDetail.orderId = `Order`.id;
	</select>


	<resultMap id="orderWithUserLazyLoadingResultMap" type="com.windea.study.mybatis.day02.domain.O2O_Order">
		<id column="id" property="id"/>
		<result column="createTime" property="createTime"/>
		<result column="note" property="note"/>
		<result column="number" property="number"/>
		<result column="userId" property="userId"/>
		<!--
			实现用户信息的延迟加载
			select：指定延迟加载需要执行的statement的id，可能需要加上namespace
			column：订单信息中关联用户信息查询的列
		-->
		<association property="user" javaType="com.windea.study.mybatis.day02.domain.User"
		             select="com.windea.study.mybatis.day02.com.windea.study.spring.demo.ssm.com.windea.study.springmvc.main.mapper.UserMapper.findUserById"
		             column="userId">
		</association>
	</resultMap>

	<!--延迟加载：查询订单信息，关联查询用户信息-->
	<select id="findOrderWithUserLazyLoading" resultMap="orderWithUserLazyLoadingResultMap">
		select * from `Order`
	</select>
</mapper>
